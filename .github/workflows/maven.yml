name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=KhinYadanarNg_cicd-demov2

      - uses: actions/checkout@master
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api https://github.com/KhinYadanarNg/cicd-demov2
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true # To make sure that SARIF upload gets called 
        env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} 
        with:
            args: --sarif-file-output=snyk.sarif
      - name: Debug
        run: |
         echo "GitHub token: ${{ secrets.GITHUB_TOKEN }}"
         echo "Current directory: $(pwd)"
         echo "List files in the current directory: $(ls)"
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2 
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
            sarif_file: snyk.sarif
  
